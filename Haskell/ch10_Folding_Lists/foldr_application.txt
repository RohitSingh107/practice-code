-- foldr 

foldr :: (a -> b -> b) -> b -> [a] -> b
foldr f z [] = z
foldr f z (x:xs) = f x (foldr f z xs)


xs = map show [1..5]

y = foldr (\x y -> concat ["(",x,"+",y,")"]) "0" xs



foldr (\x -> \y -> concat ["(", x, "+", y, ")"]) "0" ["1", "2", "3"]

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" (foldr (\x -> \y -> concat ["(", x, "+", y, ")"]) "0" ["2","3"])

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "2" (foldr (\x -> \y -> concat ["(", x, "+", y, ")"]) "0" [3]))

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "2" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "3" (foldr (\x -> \y -> concat ["(", x, "+", y, ")"]) "0" [])))

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "2" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "3" "0"))

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "2" (concat ["(", "3", "+", "0", ")"])

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "2" ("(", "3", "+", "0", ")")

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" ((\x -> \y -> concat ["(", x, "+", y, ")"]) "2" "(3+0)")

(\x -> \y -> concat ["(", x, "+", y, ")"]) "1" "(2+(3+0))"

concat ["(", "1", "+", "(2+(3+0))", ")"]

"(1+(2+(3+0)))"

