4 `rem` 9
4 `rem9
s7
s7 = pop s6 
s6
s6 = pop s5 
s5
s5 = pop s4 
pop s4 
:t pop
:k Stack 
:t pop 
:t Stack 
s4
s4 = push s3 12
s3
s3 = push s2 9
s2
s2
s2 = push s1 7
push s1 5
push s1 5
s1
s1 = newArray 5
newArray 5
:l src/Lib.hs 
s2
s2 = push s1 9
s1
s1 = push ns 7
push ns 7
ns
ns = push s 3
push s 3
s
s = newArray 5
push (newArray 5) 3
push 3 $ newArray 5
newArray  5
:t newArray  
:t push 
:l src/Lib.hs 
:l src/Lib.hs 
:t newArray 
:l src/Lib.hs 
:t Stack
:l src/Lib.hs 
:l src/Main.hs
:l exe/Main.hs 
:l src/Hangman.hs 
:l exe/Main.hs 
:l src/Hangman.hs 
:l src/Hangman.hs 
main
:r
main
:r
:l src/Main.hs 
filter (>10) [5..20]
[ ] : "sq"
[] : "sq"
' ' : "sq"
length $ ' ' : "sq"
length $ ' ' : "sq"
length $ '' : "sq"
length $ 'c' : "sq"
length $ "dgd" ++ ""
"dgd" ++ ""
gimmePerson 
gimmePerson 
gimmePerson 
gimmePerson 
gimmePerson 
main
Rohit
main
gimmePerson 
:l Person.hs 
:l Person.hs 
:l Person.hs 
mkPerson "s" 0
mkPerson "" 0
mkPerson "" 4
mkPerson "Rohit" 0
mkPerson "Rohit" 7
mkPerson Rohit 7
:l Person.hs 
:l Person.hs 
palindrome 
palindrome 
:l Palindrome.hs
isAlpha '\''
isAlpha '''
isAlpha 'g'
isAlpha ' '
:t isAlpha ' '
:t isAlpha " "
main
main
main
